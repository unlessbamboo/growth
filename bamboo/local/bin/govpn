#!/bin/bash - 
#===============================================================================
#
#          FILE: govpn.sh
# 
#         USAGE: ./govpn.sh 
# 
#   DESCRIPTION: 
#           VPN登陆脚本
# 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: YOUR NAME (), 
#  ORGANIZATION: 
#       CREATED: 2016年06月20日 13:46
#      REVISION:  ---
#===============================================================================
. /data/shell/base.sh
# 导入vpn数据
. /data/shell/vpn.sh

EMPTY=
declare -A SERVERDICT
# 关联数组
SERVERDICT=(\
    [jp1server]=${jp1server} \
    [jp2server]=${jp2server} \
    [jp3server]=${jp3server} \
    [jp4server]=${jp4server} \
    [jp5server]=${jp5server} \
    [jp6server]=${jp6server} \
    [sg1server]=${sg1server} \
    [sg2server]=${sg2server} \
    [sg3server]=${sg3server} \
    [us1server]=${us1server} \
    [us2server]=${us2server} \
    [us3server]=${us3server} \
    [hk1server]=${hk1server} \
    [hk2server]=${hk2server} )


usage()
{
    echo "All server (may be disable) :"
    # 数组排序
    keylist=(\
        $(for server in ${!SERVERDICT[*]};do
            echo "$server"
        done | sort)
        )
    # 遍历key
    for server in ${keylist[@]};do
        if [[ -z ${server} ]];then
            continue
        else
            echo -e "\t${server}"
        fi
    done
    echo "Please input one of top's value."
    echo ""
}


stop()
{
    ps -ef|grep sslocal|grep -v grep|awk '{print $2}'|\
        xargs kill -9
    if [[ $? -ne 0 ]];then
        err "Kill process failed."
    fi
}


main()
{
    SERVER=${SERVERDICT["$1"]}
    if [[ -z "$SERVER" ]];then
        err "Server 服务器是空的，什么鬼？"
    fi

    # netstat -nltp >/dev/null 2>&1|grep ${localport} \
    #     >/dev/null 2>&1
    netstat -nltp  2>&1|grep ${localport} >/dev/null 2>&1
    if [[ $? -eq 0 ]];then
        echo "Vpn process already existed."
    else
        echo "Open a new vpn process, lines:"${SERVER}
        nohup sslocal -s ${SERVER} -p ${vpnport} \
            -b 127.0.0.1 -l ${localport} -k ${passwd} \
            -m ${encrypt} >/tmp/vpn.out 2>&1 &
        echo ""
    fi
}


case "$1" in
    help):
        usage;;
    stop):
        stop;;
    ${EMPTY}):
        usage;;
    *):
        main $1;;
esac

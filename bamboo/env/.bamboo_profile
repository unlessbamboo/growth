#!/bin/zsh
# zsh环境，所有的文件判断都不能加上""

# include base.sh
. /data/shell/base.sh

# User specific environment and startup programs
export mypy=~/Growth/language/python/
export mygcc=~/Growth/language/gcc/
export mygo=~/Growth/language/go/
export mygocode=~/Growth/language/go/
export myhtml=~/Growth/language/html/
export mycx=~/Growth/language/g++/
export mysh=~/Growth/language/shell/
export myja=~/Growth/language/java/
export myjs=~/Growth/language/js/
export algo=~/Growth/algorithm/
export dst=~/Growth/data-structure/
export bamboo=~/Growth/bamboo/
export unusebamboo=~/Public/unusebamboo/
export blog=~/Public/blog/
export share=~/share/
export pastbook=~/Public/pastbook/iLifeDiary/
export django=~/Public/django/
export work=~/Public/
export project=~/Growth/project/
export rest=~/Public/restframework/
export crawler=$HOME/Public/crawler/
export visaapi=$HOME/Public/crawler-api/
export visaspider=$HOME/Public/visa/
export visaalipay=$HOME/Public/alipay/
export visadama=$HOME/Public/dama/
export visaproxy=$HOME/Public/proxy/
export reschedule=$HOME/Public/reschedule/
export monitor=$HOME/Public/monitor/
export monitorapi=$HOME/Public/monitor-api/
export shenyuan=$HOME/Public/japan_shenyuan/
export flask=$HOME/Public/flask/
export mydocker=$HOME/Public/docker/
export mydoc=$HOME/Documents/spider/
export myfabric=$HOME/Public/fabric/

# PATH
if [[ -d /usr/local/sbin ]];then
    export PATH=/usr/local/sbin:$PATH
fi
if [[ -d /usr/local/bin ]];then
    export PATH=/usr/local/bin:$PATH
fi
if [[ -d $HOME/.local/bin ]]; then
    export PATH=$HOME/.local/bin:$PATH
fi
if [[ -d $HOME/.local/tmux ]]; then
    export PATH=$HOME/.local/tmux:$PATH
fi
if [[ -d /usr/local/nginx/sbin/ ]]; then
    export PATH=/usr/local/nginx/sbin:$PATH
fi
if [[ -d /usr/local/mysql/bin/ ]]; then
    export PATH=/usr/local/mysql/bin/:$PATH
fi
if [[ -d /usr/local/python/bin/ ]]; then
    export PATH=$PATH:/usr/local/python/bin/
fi
if [[ -d /usr/local/tmux/bin/ ]];then
    export PATH=$PATH:/usr/local/tmux/bin/
fi
if [[ -d /usr/local/Cellar/postgresql/9.6.1/bin/ ]];then
    export PATH=$PATH:/usr/local/Cellar/postgresql/9.6.1/bin/
fi
if [[ -d /usr/local/opt/openssl/ ]];then
    export PATH="/usr/local/opt/openssl/bin:$PATH"
fi
if [[ -d /opt/local/bin/ ]];then
    export PATH=$PATH:/opt/local/bin
fi

# python
if [[ -d /usr/local/opt/python@2/ ]];then
    export PATH="$PATH:/usr/local/opt/python@2/bin"
fi

if [[ -d /usr/local/opt/qt5 ]];then
    export PATH=$PATH:"/usr/local/opt/qt5/bin"
    # export LDFLAGS=$LDFLAGS:-L/usr/local/opt/qt5/lib
    # export CPPFLAGS=$CPPFLAGS:-I/usr/local/opt/qt5/include
    # export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/opt/qt5/lib/pkgconfig
fi
if [[ -d "/usr/local/java/" ]];then
    export JAVA_HOME=/usr/local/java/jdk1.7.0_71
    export CLASSPATH=.:%JAVA_HOME%/lib/dt.jar:%JAVA_HOME%/lib/tools.jar
    export PATH=$PATH:$JAVA_HOME/bin
fi
# 默认使用JAVA8
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)

export M2_HOME=/usr/local/apache-maven
if [[ -d ${M2_HOME} ]];then
    export M2=$M2_HOME/bin 
    export PATH=$M2:$PATH
fi
ZOOKEEPER_HOME=/usr/local/zookeeper
if [[ -d ${ZOOKEEPER_HOME} ]];then
    export ZOOKEEPER_HOME
    export PATH=$ZOOKEEPER_HOME/bin:$PATH
fi
STORM_HOME=/usr/local/storm
if [[ -d ${STORM_HOME} ]];then
    export STORM_HOME
    export PATH=$STORM_HOME/bin:$PATH
fi
MAC_PYTHON_BIN="$HOME/Library/Python/2.7/bin/"
if [[ -d ${MAC_PYTHON_BIN} ]];then
    export PATH=$PATH:${MAC_PYTHON_BIN}
fi
# virtualwrapper 
WRAPPER_PATH=`which virtualenvwrapper.sh`
if [[ -f ${WRAPPER_PATH} ]];then
    export WORKON_HOME=$HOME/.virtualenvs
    source ${WRAPPER_PATH}
    ######别名设置#####
    alias mkenv="mkvirtualenv"
    alias rmvenv="rmvirtualenv"
    alias deact="deactivate"
fi
# pyenv
# PYENV_ROOT="$HOME/.pyenv"
# if [[ -d ${PYENV_ROOT} ]];then
#     export PATH="$PYENV_ROOT/bin:$PATH"
#     eval "$(pyenv init -)"
# fi

# bash completion
CURRENT_SYSTEM=`uname -s`
if [[ -d ${MAC_PYTHON_BIN} ]];then
    if [[ -f $(brew --prefix)/etc/bash_completion ]]; then
      . $(brew --prefix)/etc/bash_completion
    fi
fi

# vim
export EDITOR=vim
# svn configure
export SVN_EDITOR=vim
# crontab 设置，还要在.vimrc中设置
alias crontab="VIM_CRONTAB=true crontab"
# streamparse
export LEIN_ROOT=0
# core dump 配置
ulimit -c unlimited
# wireshark ssl package
export SSLKEYLOGFILE=~/Documents/wireshark/sslkeylogout.log
# Evernote中国版
export GEEKNOTE_BASE=yinxiang

# 运行powerline
if [[ -n `python -V 2>/dev/null` ]];then
    PYTHON27_SITEPACKAGE=`python -m site --user-site`/
    if [[ -f ${PYTHON27_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh ]];then
        . ${PYTHON27_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh
    fi
fi
if [[ -n `python3 -V 2>/dev/null` ]];then
    PYTHON34_SITEPACKAGE=`python3 -m site --user-site`/
    if [[ -f ${PYTHON34_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh ]];then
        . ${PYTHON34_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh
    fi
fi

# shadowsocks-NG
alias unsetproxy='unset http_proxy; unset https_proxy'
# export http_proxy=http://127.0.0.1:1087
# export https_proxy=http://127.0.0.1:1087
proxy="http://127.0.0.1:8118"
export http_proxy=$proxy
export https_proxy=$proxy
# 表示不仅过privoxy代理的地址或者域名, 通过,分隔, 类似PAC
export no_proxy="localhost, 127.0.0.1, ::1"


# NPM
alias cnpm="npm --registry=https://registry.npm.taobao.org --cache=$HOME/.npm/.cache/cnpm \
    --disturl=https://npm.taobao.org/dist --userconfig=$HOME/.cnpmrc"
# GO
export GOPATH=$HOME/.go/

# ipython
alias ipython='python -m IPython'

# docker
alias dockervm='screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty'

# android platform-tools
if [[ -d $HOME/Library/Android/sdk/platform-tools/ ]];then
    export PATH=$PATH:/Users/bifeng/Library/Android/sdk/platform-tools/
fi

command -v foo >/dev/null 2>&1
if [[ $? == 0 ]];then
    eval "$(pyenv init -)"
fi

# macport
MAC_PORTS=~/macports/bin
if [[ -d ${MAC_PORTS} ]];then
    export PATH=$PATH:${MAC_PORTS}
fi

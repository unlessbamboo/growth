#!/bin/zsh
# zsh环境，所有的文件判断都不能加上""

# include base.sh
. /data/shell/base.sh

# User specific environment and startup programs
export mypy=~/Growth/language/python/
export mygcc=~/Growth/language/gcc/
export mygo=~/Growth/language/go/
export mygocode=~/Growth/language/go/
export myhtml=~/Growth/language/html/
export mycx=~/Growth/language/g++/
export mysh=~/Growth/language/shell/
export myja=~/Growth/language/java/
export myjs=~/Growth/language/js/
export myalgo=~/Growth/algorithm/
export mydst=~/Growth/data-structure/
export mydocker=$HOME/Public/docker/
export mydoc=$HOME/Documents/spider/
export myfabric=$HOME/Public/fabric/

export bamboo=~/Growth/bamboo/
export unusebamboo=~/Public/unusebamboo/
export blog=~/Public/blog/
export share=~/share/
export pastbook=~/Public/pastbook/iLifeDiary/
export django=~/Public/django/
export work=~/Public/
export project=~/Growth/project/
export rest=~/Public/restframework/
export flask=$HOME/Public/flask/
# anniu keji
export visacrawler=$HOME/Public/anniu/crawler/
export visaoldcralwer=$HOME/Public/anniu/visa/
export visaapi=$HOME/Public/anniu/crawler-api/
export visaalipay=$HOME/Public/anniu/alipay/
export visadama=$HOME/Public/anniu/dama/
export visaproxy=$HOME/Public/anniu/proxy/
export visaemail=$HOME/Public/anniu/visaemail/
export visareschedule=$HOME/Public/anniu/reschedule/
export visamonitor=$HOME/Public/anniu/monitor/
export visamonitorapi=$HOME/Public/anniu/monitor-api/
export visashenyuan=$HOME/Public/anniu/japan_shenyuan/
export visaspider=$HOME/Public/anniu/spider/
export visasms=$HOME/Public/anniu/visasms/

# PATH
if [[ -d /usr/local/sbin ]];then
    export PATH=/usr/local/sbin:$PATH
fi
if [[ -d /usr/local/bin ]];then
    export PATH=/usr/local/bin:$PATH
fi
if [[ -d $HOME/.local/bin ]]; then
    export PATH=$HOME/.local/bin:$PATH
fi
if [[ -d $HOME/.local/tmux ]]; then
    export PATH=$HOME/.local/tmux:$PATH
fi
if [[ -d /usr/local/nginx/sbin/ ]]; then
    export PATH=/usr/local/nginx/sbin:$PATH
fi
if [[ -d /usr/local/mysql/bin/ ]]; then
    export PATH=/usr/local/mysql/bin/:$PATH
fi
if [[ -d /usr/local/python/bin/ ]]; then
    export PATH=$PATH:/usr/local/python/bin/
fi
if [[ -d /usr/local/tmux/bin/ ]];then
    export PATH=$PATH:/usr/local/tmux/bin/
fi
if [[ -d /usr/local/Cellar/postgresql/9.6.1/bin/ ]];then
    export PATH=$PATH:/usr/local/Cellar/postgresql/9.6.1/bin/
fi
if [[ -d /usr/local/opt/openssl/ ]];then
    export PATH="/usr/local/opt/openssl/bin:$PATH"
fi
if [[ -d /opt/local/bin/ ]];then
    export PATH=$PATH:/opt/local/bin
fi

if [[ -d $HOME/.cargo/bin ]];then
    export PATH=$PATH:$HOME/.cargo/bin
fi

# ORACLE
local oracle_dir=''
if [[ -d /opt/instantclient_19_8/ ]];then
    oracle_dir=/opt/instantclient_19_8/
elif [[ -d /opt/oracle/instanceclient ]];then
    oracle_dir=/opt/oracle/instanceclient
fi
if [[ -d ${oracle_dir} ]];then
    export ORACLE_HOME=${oracle_dir}
    export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:$ORACLE_HOME
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$ORACLE_HOME
    export PATH=${ORACLE_HOME}:$PATH
    export OCI_HOME=${ORACLE_HOME}
    export OCI_LIB_DIR=$OCI_HOME
    export OCI_INCLUDE_DIR=$OCI_HOME/sdk/include
    export OCI_VERSION=11
    export OCI_LIBRARY_PATH=$OCI_LIB_DIR
fi


if [[ -d /opt/homebrew/bin/ ]];then
    export PATH=$PATH:/opt/homebrew/bin
    alias abrew='/opt/homebrew/bin/brew'
fi
if [[ -f /usr/local/bin/brew ]];then
    alias ibrew='arch -x86_64 /usr/local/bin/brew'
fi

if [[ -d /opt/homebrew/opt/ruby/bin ]];then
    export PATH=$PATH:/opt/homebrew/opt/ruby/bin
fi

# python
if [[ -d /usr/local/opt/python@2/ ]];then
    export PATH="$PATH:/usr/local/opt/python@2/bin"
fi

if [[ -d /usr/local/opt/qt5 ]];then
    export PATH=$PATH:"/usr/local/opt/qt5/bin"
    # export LDFLAGS=$LDFLAGS:-L/usr/local/opt/qt5/lib
    # export CPPFLAGS=$CPPFLAGS:-I/usr/local/opt/qt5/include
    # export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/opt/qt5/lib/pkgconfig
fi
if [[ -d "/usr/local/java/" ]];then
    export JAVA_HOME=/usr/local/java/jdk1.7.0_71
    export CLASSPATH=.:%JAVA_HOME%/lib/dt.jar:%JAVA_HOME%/lib/tools.jar
    export PATH=$PATH:$JAVA_HOME/bin
fi
if [[ -d "/opt/homebrew/opt/openjdk/bin" ]];then
    export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
fi
# 默认使用JAVA8
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
# 指定Eclipse路径
if [[ -d "$HOME/Applications/Eclipse.app/Contents/Eclipse/" ]];then
    export ECLIPSE_HOME=~/Applications/Eclipse.app/Contents/Eclipse/
fi
# mysql头文件
if [[ -d "/usr/local/opt/mysql-client/" ]];then
    export LDFLAGS="$LDFLAGS -L/usr/local/opt/mysql-client/lib"
    export CPPFLAGS="$CPPFLAGS -I/usr/local/opt/mysql-client/include"
fi

export M2_HOME=/usr/local/apache-maven
if [[ -d ${M2_HOME} ]];then
    export M2=$M2_HOME/bin 
    export PATH=$M2:$PATH
fi
ZOOKEEPER_HOME=/usr/local/zookeeper
if [[ -d ${ZOOKEEPER_HOME} ]];then
    export ZOOKEEPER_HOME
    export PATH=$ZOOKEEPER_HOME/bin:$PATH
fi
STORM_HOME=/usr/local/storm
if [[ -d ${STORM_HOME} ]];then
    export STORM_HOME
    export PATH=$STORM_HOME/bin:$PATH
fi
MAC_PYTHON_BIN="$HOME/Library/Python/2.7/bin/"
if [[ -d ${MAC_PYTHON_BIN} ]];then
    export PATH=$PATH:${MAC_PYTHON_BIN}
fi
# virtualwrapper, 不一定是/usr/local/目录下面
WRAPPER_PATH=`which virtualenvwrapper.sh`
if [[ -f ${WRAPPER_PATH} ]];then
    export WORKON_HOME=$HOME/.virtualenvs
    source ${WRAPPER_PATH}
    ######别名设置#####
    alias mkenv="mkvirtualenv"
    alias rmvenv="rmvirtualenv"
    alias deact="deactivate"
fi
# pyenv
PYENV_ROOT="$HOME/.pyenv"
if [[ -d ${PYENV_ROOT} ]];then
    export PATH="$PYENV_ROOT/bin:$PATH"
    if command -v pyenv 1>/dev/null 2>&1;then
        eval "$(pyenv init -)"
    fi
    alias ipyenv="arch -x86_64 pyenv"
fi
# 确保YCM 生效
export PYTHON_CONFIGURE_OPTS="--enable-framework"

# bash completion
CURRENT_SYSTEM=`uname -s`
if [[ -d ${MAC_PYTHON_BIN} ]];then
    if [[ -f $(brew --prefix)/etc/bash_completion ]]; then
      . $(brew --prefix)/etc/bash_completion
    fi
fi

# MAC M1架构
if [[ -d /usr/local/opt/zlib/lib ]];then
    export LDFLAGS="-L/usr/local/opt/zlib/lib"
    export CPPFLAGS="-I/usr/local/opt/zlib/include"
fi

# 替换brew Bottles(二进制)源, 需要搭配默认源使用
# 中科大
# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles
# 阿里云
# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles
# 关闭每次执行命令的时候自动更新, 通过crontab定时任务在中午定时执行更新任务
export HOMEBREW_NO_AUTO_UPDATE=true

# vim
export EDITOR=vim
# svn configure
export SVN_EDITOR=vim
# crontab 设置，还要在.vimrc中设置
alias crontab="VIM_CRONTAB=true crontab"
# streamparse
export LEIN_ROOT=0
# core dump 配置
ulimit -c unlimited
# wireshark ssl package
export SSLKEYLOGFILE=~/Documents/wireshark/sslkeylogout.log
# Evernote中国版
export GEEKNOTE_BASE=yinxiang

# 运行powerline
if [[ -n `python -V 2>/dev/null` ]];then
    PYTHON27_SITEPACKAGE=`python -m site --user-site`/
    if [[ -f ${PYTHON27_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh ]];then
        . ${PYTHON27_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh
    fi
fi
if [[ -n `python3 -V 2>/dev/null` ]];then
    PYTHON34_SITEPACKAGE=`python3 -m site --user-site`/
    if [[ -f ${PYTHON34_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh ]];then
        . ${PYTHON34_SITEPACKAGE}/powerline/bindings/zsh/powerline.zsh
    fi
fi

# shadowsocks-NG
# proxy="http://127.0.0.1:1087"
proxy="http://127.0.0.1:58591"
alias unsetproxy='unset http_proxy; unset https_proxy; unset HTTP_PROXY; unset HTTPS_PROXY'
alias setproxy='export http_proxy='$proxy'; export https_proxy='$proxy''
# Trojan
# 表示不仅过privoxy代理的地址或者域名, 通过,分隔, 类似PAC
export no_proxy="localhost, 127.0.0.1, ::1"


# NPM
alias cnpm="npm --registry=https://registry.npm.taobao.org --cache=$HOME/.npm/.cache/cnpm \
    --disturl=https://npm.taobao.org/dist --userconfig=$HOME/.cnpmrc"
# GO
export GOPATH=$HOME/.go/

# ipython
alias ipython='python -m IPython'

# docker
alias dockervm='screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty'

# android platform-tools
if [[ -d $HOME/Library/Android/sdk/platform-tools/ ]];then
    export PATH=$PATH:/Users/bifeng/Library/Android/sdk/platform-tools/
fi

command -v foo >/dev/null 2>&1
if [[ $? == 0 ]];then
    eval "$(pyenv init -)"
fi

# macport
MAC_PORTS=~/macports/bin
if [[ -d ${MAC_PORTS} ]];then
    export PATH=$PATH:${MAC_PORTS}
fi

# chrome
alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
alias chrome-canary="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary"
alias chromium="/Applications/Chromium.app/Contents/MacOS/Chromium"

# nvm
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# MAC 上SSH 本机之后的配置(比如windows连接本机)
export LANG="zh_CN.UTF-8"
export LC_COLLATE="zh_CN.UTF-8"
export LC_CTYPE="zh_CN.UTF-8"
export LC_MESSAGES="zh_CN.UTF-8"
export LC_MONETARY="zh_CN.UTF-8"
export LC_NUMERIC="zh_CN.UTF-8"
export LC_TIME="zh_CN.UTF-8"

# 设置系统文件句柄数目
ulimit -S -n 4096

# FLASK 项目默认配置
export FLASK_APP=manage.py
export FLASK_DEBUG=1

if [[ -f $HOME/.mc_profile ]];then
    source $HOME/.mc_profile
fi
